import { Command } from '../../structures/Command'
import { Instance } from '../../structures/Instance'

import { type WAMessage } from '@whiskeysockets/baileys'
import { UserCache } from '../../types'
import MessageCollector from '../../structures/MessageCollector'
import { getMessageBody } from '../../utils/getMessageBody'
import { getRandomNumber } from '../../utils/getRandomNumber'
import { delay } from '../../utils/delay'
import { settings } from '../../settings'
import { jidIsGroup } from '../../utils/jidIsGroup'

export default class Start extends Command {
  randomTimeDelay: number

  constructor(instance: Instance) {
    super(instance, {
      name: 'start',
      description: 'â–¶ Inicia o sistema de novos usu[arios].',
      category: 'Outros',
      developerOnly: true
    })


    this.randomTimeDelay = getRandomNumber({ min: 1000, max: 3000 })
  }

  async execute(message: WAMessage) {
    const messageAuthor = message.key.participant || message.key.remoteJid
    if (!messageAuthor) {
      return
    }

    const chatJid = message.key.remoteJid
    if (!chatJid) {
      return
    }

    const userName = message.pushName

    await this.createUser({
      jid: messageAuthor,
      createdAt: new Date(),
    })

    await this.instance.socket.sendMessage(chatJid, {
      text: `OlÃ¡ ${userName ?? ''}, percebi que vocÃª estÃ¡ nÃ£o estÃ¡ registrado em meu sistema!\n` +
        'EntÃ£o deixe-me apresentar... Eu sou o Reth, o melhor robÃ´ para o WhatsApp! ðŸ’¬\n\n' +
        'Eu provavelmente jÃ¡ mencionei minhas funÃ§Ãµes antes, mas nÃ£o custa reforÃ§ar. Aqui vÃ£o algumas coisas que posso fazer:\n' +
        '- Criar figurinhas incrÃ­veis a partir de vÃ­deos e fotos, reproduzir quaisquer mÃºsicas diretamente no WhatsApp, corrigir erros gramaticas de textos e muito mais!'
    })

    await this.timeDelay()

    await this.instance.socket.sendMessage(chatJid, {
      text: 'ðŸ’» *Aprenda a utilizar meus comandos e funÃ§Ãµes*\n\n' +
        'Como vocÃª Ã© um novo usuÃ¡rio, tenho um pequeno tutorial para te orientar a utilizar meus comandos e funÃ§Ãµes.\n\n' +
        'Para comeÃ§ar, *digite o nÃºmero* de uma das opÃ§Ãµes abaixo:\n' +
        '*1 - Fazer tutorial (recomendado)*\n' +
        '2 - Pular tutorial'
    })

    const selectedTutorialOptionMessage = await this.collectMessageOption(['1', '2'], chatJid)
    if (!selectedTutorialOptionMessage) {
      return this.handleTutorialSkip(messageAuthor, 'ðŸ¤– *O tutorial foi cancelado pois nenhuma opÃ§Ã£o foi selecionada.*')
    }

    const selectedTutorialOption = getMessageBody(selectedTutorialOptionMessage)
    if (!selectedTutorialOption) {
      return this.handleTutorialSkip(messageAuthor, 'ðŸ¤– *O tutorial foi cancelado pois nenhuma opÃ§Ã£o foi selecionada.*')
    }

    if (selectedTutorialOption === '2') {
      return this.handleTutorialSkip(messageAuthor, 'ðŸ¤– *O tutorial foi pulado com sucesso!*')
    }

    await this.instance.socket.sendMessage(messageAuthor, {
      text: 'Vamos comeÃ§ar...'
    })

    this.enableTutorialMode(messageAuthor)

    await this.timeDelay()

    await this.instance.socket.sendMessage(messageAuthor, {
      text: 'ðŸ’» *Como utilizar meus comandos?*\n' +
        'Para utilizar meus comandos, adicione o prefixo "/" antes do nome do comando desejado.\n' +
        'Por exemplo, para reproduzir a mÃºsica "Billie Jean", envie "/play Billie Jean".'
    })

    await this.timeDelay({ additionalTime: 6000 })

    await this.instance.socket.sendMessage(messageAuthor, {
      text: 'â›” *LimitaÃ§Ãµes do usuÃ¡rio*:\n\n' +
        'Para evitar o banimento do meu nÃºmero no WhatsApp, precisamos lidar com algumas restriÃ§Ãµes. Se sua mensagem nÃ£o receber resposta, pode ser devido a uma das seguintes situaÃ§Ãµes:\n\n' +
        '- VocÃª enviou outro comando antes de receber a resposta do primeiro.\n' +
        '- A mensagem foi enviada por meio da funÃ§Ã£o de transmissÃ£o do WhatsApp.\n' +
        '- VocÃª estÃ¡ na minha lista de nÃºmeros ignorados.\n' +
        `- A mensagem nÃ£o tem o prefixo \`\`\`${settings.prefix}\`\`\` e nÃ£o Ã© uma mÃ­dia (imagem, vÃ­deo ou Ã¡udio).\n`
    });

    await this.timeDelay({ additionalTime: 15000 })

    await this.instance.socket.sendMessage(messageAuthor, {
      text: 'ðŸ“– *Links importantes*\n\n' +
        `ðŸ“œ *Termos e condiÃ§Ãµes:*\n${this.instance.website}/termos\n` +
        '> Ao utilizar minhas funÃ§Ãµes, vocÃª automaticamente concorda com meus termos.\n\n' +
        `ðŸ’» *Lista de comandos:*\n${this.instance.website}/comandos\n` +
        '> Veja todos os meus comandos, com exemplos e demonstraÃ§Ãµes.\n\n' +
        `ðŸ“£ *Canal do Reth:*\nhttps://whatsapp.com/channel/0029Va4t8Lv4NVitiLvWbe1s\n` +
        '> Fique por dentro de todas atualizaÃ§Ãµes que estÃ£o acontecendo em meu sistema.\n\n' +
        `ðŸ‘‘ *Reth Premium:*\nhttps://rethbot.website/premium\n` +
        '> Aproveite ao mÃ¡ximo o que minhas funcionalidades oferece!'
    })

    await this.timeDelay({ additionalTime: 5000 })

    await this.instance.socket.sendMessage(messageAuthor, {
      caption: 'âš  *Lembre-se:*\n\n' +
        'Caso seu comando nÃ£o se encaixe nas limitaÃ§Ãµes e mesmo assim eu nÃ£o tenha respondido dentro de 5 minutos, envie o comando novamente.',
      image: {
        url: 'https://i.imgur.com/9iXyela.jpg'
      }
    })

    await this.timeDelay({ additionalTime: 5000 })

    this.handleTutorialCompleted(chatJid)
  }


  private async timeDelay({ additionalTime }: { additionalTime?: number } = {}) {
    return delay(this.randomTimeDelay + (additionalTime ?? 0))
  }

  private async handleTutorialSkip(chatJid: string, text: string) {
    this.disableTutorialMode(chatJid)

    return this.instance.socket.sendMessage(chatJid, {
      text: text.concat('\n\n').concat('ðŸ“Œ O comando /menu tem tudo que vocÃª precisa.')
    })
  }

  private async handleTutorialCompleted(chatJid: string) {
    this.disableTutorialMode(chatJid)

    return this.instance.socket.sendMessage(chatJid, {
      text: 'âœ… *VocÃª concluiu o tutorial com sucesso!*\n' +
        'Se estiver com dÃºvidas, entre em contato com o meu suporte:\n' +
        'https://link.rethbot.website/support\n' +
        '- Link de redirecionamento para o WhatsApp'
    })
  }

  private enableTutorialMode(userJid: string) {
    return this.instance.tutorialModeUsers.push(userJid)
  }

  private disableTutorialMode(userJid: string) {
    return this.instance.tutorialModeUsers = this.instance.tutorialModeUsers.filter((user) => user !== userJid)
  }

  private async createUser(user: Partial<UserCache>) {
    if (!user || !user.jid) {
      return
    }

    const userDB = await this.instance.prisma.user.create({
      data: {
        jid: user.jid,
        createdAt: new Date(),
        groups: user.groups ?? [],
      }
    })

    this.instance.cache.users.set(userDB.jid, userDB)
  }

  async collectMessageOption(options: string[], jid: string) {
    const messageCollector = new MessageCollector(this.instance)

    const collectedMessages = await messageCollector.awaitMessages({
      jid,
      filter: (message) => {
        const messageBody = getMessageBody(message)
        if (!messageBody) {
          return false
        }

        if (!options.includes(messageBody.toLowerCase().trim())) {
          return false
        }

        const chatJid = message.key.remoteJid!
        const isGroup = jidIsGroup(chatJid)

        if (isGroup) {
          return false
        }

        return true
      },
      time: 5 * 60 * 1000,
      max: 1,
    })

    const collectedMessage = collectedMessages[0]

    return collectedMessage
  }
}
